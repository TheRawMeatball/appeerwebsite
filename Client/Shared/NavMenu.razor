@inject State _state

<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top" style="z-index: 9999999999;">
    <a class="navbar-brand" href="">csharpfrontend</a>
    <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarSupportedContent">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="navbar-collapse collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="notes"> Notes </NavLink> <!-- all|math|etc../(share) -->
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="questions"> Questions </NavLink> <!-- all|math|etc../(ask) -->
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="find"> Find </NavLink>
            </li>
        </ul>
        @if(_state.User != null)
        {
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @_state.User.FirstName @_state.User.LastName
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="user/@(_state.User.Id)"> Profile </a>
                    <a class="dropdown-item" href="settings"> Settings </a>
                    @if (_state.User.Instructor || _state.User.Admin)
                    {
                        <a class="dropdown-item" href="instruct"> Instructor Panel </a>
                    }
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="logout"> Logout </a>
                </div>
            </div>
        }
    </div>
</nav>

@code
{
    protected override void OnInitialized()
    {
        _state.PropertyChanged += (a,b) => StateHasChanged();
    }

}